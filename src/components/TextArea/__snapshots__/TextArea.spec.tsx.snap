// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should be TextArea render correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#58627F",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "marginVertical": 4,
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Array [
          Object {
            "borderWidth": 2,
            "height": 140,
          },
        ],
      ]
    }
    testID="input-box"
  >
    <TextInput
      allowFontScaling={true}
      multiline={true}
      numberOfLines={7}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="#58627F"
      rejectResponderTermination={true}
      selectionColor="#58627F"
      style={
        Object {
          "color": "#1A233D",
          "flex": 1,
          "fontFamily": "\\"Public Sans\\", sans-serif",
          "textAlignVertical": "top",
        }
      }
      testID="Input"
      textContentType="password"
      underlineColorAndroid="transparent"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "display": "flex",
          "flexDirection": "row",
          "height": 16,
          "justifyContent": "flex-end",
        },
        Array [
          Object {},
        ],
      ]
    }
    testID="Box"
  />
</RCTSafeAreaView>
`;

exports[`should have a error feedback 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <Text
    style={
      Array [
        Object {
          "color": "#58627F",
          "display": "flex",
          "fontFamily": "\\"Public Sans\\", sans-serif",
          "fontWeight": "700",
        },
        Array [
          Object {
            "fontSize": 14,
          },
        ],
      ]
    }
  >
    Label do TextArea
  </Text>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#D63429",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "marginVertical": 4,
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Array [
          Object {
            "borderWidth": 2,
            "height": 140,
          },
        ],
      ]
    }
    testID="input-box"
  >
    <TextInput
      allowFontScaling={true}
      multiline={true}
      numberOfLines={7}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="#58627F"
      rejectResponderTermination={true}
      selectionColor="#58627F"
      style={
        Object {
          "color": "#1A233D",
          "flex": 1,
          "fontFamily": "\\"Public Sans\\", sans-serif",
          "textAlignVertical": "top",
        }
      }
      testID="Input"
      textContentType="password"
      underlineColorAndroid="transparent"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "display": "flex",
          "flexDirection": "row",
          "height": 16,
          "justifyContent": "flex-end",
        },
        Array [
          Object {},
        ],
      ]
    }
    testID="Box"
  />
</RCTSafeAreaView>
`;

exports[`should have a success feedback 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <Text
    style={
      Array [
        Object {
          "color": "#58627F",
          "display": "flex",
          "fontFamily": "\\"Public Sans\\", sans-serif",
          "fontWeight": "700",
        },
        Array [
          Object {
            "fontSize": 14,
          },
        ],
      ]
    }
  >
    Label do TextArea
  </Text>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "borderColor": "#15AB51",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "marginVertical": 4,
          "paddingHorizontal": 16,
          "paddingVertical": 8,
        },
        Array [
          Object {
            "borderWidth": 2,
            "height": 140,
          },
        ],
      ]
    }
    testID="input-box"
  >
    <TextInput
      allowFontScaling={true}
      multiline={true}
      numberOfLines={7}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="#58627F"
      rejectResponderTermination={true}
      selectionColor="#58627F"
      style={
        Object {
          "color": "#1A233D",
          "flex": 1,
          "fontFamily": "\\"Public Sans\\", sans-serif",
          "textAlignVertical": "top",
        }
      }
      testID="Input"
      textContentType="password"
      underlineColorAndroid="transparent"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "display": "flex",
          "flexDirection": "row",
          "height": 16,
          "justifyContent": "flex-end",
        },
        Array [
          Object {},
        ],
      ]
    }
    testID="Box"
  />
</RCTSafeAreaView>
`;
