// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should TextField render correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderColor": "#5D6A75",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "marginVertical": 4,
          "paddingHorizontal": 16,
        },
        Array [
          Object {
            "borderWidth": 2,
            "height": 56,
          },
        ],
      ]
    }
    testID="input-box"
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="#5D6A75"
      rejectResponderTermination={true}
      selectionColor="#5D6A75"
      style={
        Object {
          "flex": 1,
        }
      }
      testID="Input"
      textContentType="password"
      underlineColorAndroid="transparent"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "height": 16,
        },
        Array [
          Object {},
        ],
      ]
    }
    testID="Box"
  />
</RCTSafeAreaView>
`;

exports[`should have a error feedback 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <Text
    style={
      Array [
        Object {
          "color": "#2D3338",
          "display": "flex",
          "fontFamily": "\\"Inter\\", sans-serif",
          "fontWeight": "700",
        },
        Array [
          Object {
            "fontSize": 14,
          },
        ],
      ]
    }
  >
    Label do TextArea
  </Text>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderColor": "#E20A0A",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "marginVertical": 4,
          "paddingHorizontal": 16,
        },
        Array [
          Object {
            "borderWidth": 2,
            "height": 56,
          },
        ],
      ]
    }
    testID="input-box"
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="#5D6A75"
      rejectResponderTermination={true}
      selectionColor="#5D6A75"
      style={
        Object {
          "flex": 1,
        }
      }
      testID="Input"
      textContentType="password"
      underlineColorAndroid="transparent"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "height": 16,
        },
        Array [
          Object {},
        ],
      ]
    }
    testID="Box"
  >
    <Icon
      color="#E20A0A"
      name="alert-circle"
      size={16}
    />
  </View>
</RCTSafeAreaView>
`;

exports[`should have a success feedback 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <Text
    style={
      Array [
        Object {
          "color": "#2D3338",
          "display": "flex",
          "fontFamily": "\\"Inter\\", sans-serif",
          "fontWeight": "700",
        },
        Array [
          Object {
            "fontSize": 14,
          },
        ],
      ]
    }
  >
    Label do TextArea
  </Text>
  <View
    onBlur={[Function]}
    onFocus={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "borderColor": "#00B649",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "row",
          "marginVertical": 4,
          "paddingHorizontal": 16,
        },
        Array [
          Object {
            "borderWidth": 2,
            "height": 56,
          },
        ],
      ]
    }
    testID="input-box"
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      onSubmitEditing={[Function]}
      placeholder="Placeholder"
      placeholderTextColor="#5D6A75"
      rejectResponderTermination={true}
      selectionColor="#5D6A75"
      style={
        Object {
          "flex": 1,
        }
      }
      testID="Input"
      textContentType="password"
      underlineColorAndroid="transparent"
    />
  </View>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "display": "flex",
          "flexDirection": "row",
          "height": 16,
        },
        Array [
          Object {},
        ],
      ]
    }
    testID="Box"
  >
    <Icon
      color="#00B649"
      name="check-circle"
      size={16}
    />
  </View>
</RCTSafeAreaView>
`;
